{{ define "base/index.html.tmpl" }}
<!doctype html>
<html>
  <head>
    <title> {{.title}} </title>
    <link rel="stylesheet" href="/static/style.css" />
    <link rel="stylesheet" href="/static/override.css" />
    <link rel="icon" href="/static/favicon.png" />
    <meta charset="utf-8" />
    <!-- <script type="text/javascript" src="/static/wasm_exec.min.js"> -->
      <script  type="text/javascript" src="/static/bitchan_post.js" />
    </script>
  </head>
  <body>
    <!--
    <noscript>
      yes this requires js. no it won't work without it. yes i hate it too, the web was a mistake.
    </noscript>
    <script>
      const go = new Go();
      WebAssembly.instantiateStreaming(fetch("/static/bitchan.wasm"), go.importObject).then((result) => {
        go.run(result.instance);
      });
    </script>
    -->
    <form method="post" action="/bitchan/v1/post" enctype="multipart/form-data">
      <input type="file" name="file" />
      <textarea id="poster" name="comment"></textarea>
      <input type="submit" value="post" />
    </form>
    <hr />
    <label for="posts">active posts</label>
    <div id="posts">
    </div>
    <script>
      const wordIsCite = (word) => {
        if(!word.startsWith(">>"))
          return false;
        word = word.substr(2).replace(/(\s)/, "");
        return word.toLowerCase().match(/^[a-f0-9]{40}$/) != null;
      };
      const wordToCite = (word) => {
        return word.substr(2).replace(/(\s)/, "");
      };
      const injectCiteLinks = (elem, text) => {
        for(let line of text.split("\n"))
        {
          const words = line.split(" ");
          for(let word of words)
          {
            if(wordIsCite(word))
            {
              console.log("found magnet: "+word);
              let span = document.createElement("span");
              let e = document.createElement("span");
              span.appendChild(e);
              span.onmouseover = (ev) => {
                console.log("Show magnet : "+word);
                embedPost(wordToCite(word), e);
              };
              span.onmouseout = (ev) => {
                while(e.children.length)
                  e.children[0].remove();
              };
              span.setAttribute("class", "link");
              span.appendChild(document.createTextNode(word));
              elem.appendChild(span);
            }
            else
            {
              elem.appendChild(document.createTextNode(word+" "));
            }
          }
          elem.appendChild(document.createElement("br"));
        }
      };
      
      const fileIsKind = (file, kinds) => {
        const f = file.toLowerCase();
        for(let t of kinds)
        {
          if(f.endsWith("."+t))
            return true;
        }
        return false;
      };
      const fileIsVideo = (file) => {
        return fileIsKind(file, ["mp4", "m4v", "ogv", "webm"]);
      };
      const fileIsImage = (file) => {
        return fileIsKind(file, ["png", "gif", "jpeg", "jpg", "webp"]);
      };
      const fileIsAudio = (file) => {
        return fileIsKind(file, ["mp3", "oga", "opus", "ogg"]);
      };
      const allowEmbedFile = (file) => {
        if(fileIsImage(file))
          return true;
        if(fileIsVideo(file))
          return true;
        if(fileIsAudio(file))
          return true;
        return false;
      };

      const embedPost = (infohash_hex, root) => {
        let e = document.createElement("div");
        let cite = document.createElement("span");
        cite.innerText = "[cite]";
        cite.onclick = (ev) => {
          const postarea = document.getElementById("poster");
          postarea.value += ">>" + infohash_hex + "\n";
        };
        e.appendChild(cite);
        let a = document.createElement("a");
        a.href = "magnet:?xt=urn:btih:" + infohash_hex + "&ws=" + encodeURIComponent(location.protocol + "//" + location.host + "/files/");
        a.innerText = "[magnet]";
        e.appendChild(a);
        root.appendChild(e);
        root.appendChild(document.createElement("hr"));
        fetch("/bitchan/v1/files.json?infohash_hex="+infohash_hex).then(response => response.json()).
          then(data => {
            for(let file of data['files'])
            {
              if(fileIsKind(file, ["txt"]))
              {
                fetch(file).then(response => response.text()).then(data => {
                  var elem = document.createElement("pre");
                  elem.setAttribute("class", "citable_text");
                  injectCiteLinks(elem, data);
                  e.appendChild(elem);
                });
              }
              if(!allowEmbedFile(file))
                continue;
              if(fileIsImage(file))
              {
                let img_elem = document.createElement("img");
                img_elem.src = file;
                img_elem.style = "max-width: 500px;";
                e.appendChild(img_elem);
              }
              if(fileIsVideo(file))
              {
                let vid_elem = document.createElement("video");
                vid_elem.src = file;
                vid_elem.style = "max-width: 500px;";
                e.appendChild(vid_elem);                
              }
            
              if(fileIsAudio(file))
              {
                let audio_elem = document.createElement("audio");
                audio_elem.src = file;
                audio_elem.controls = "controls";
                e.appendChild(audio_elem); 
              }
            }
          });
      };
      
      let root = document.getElementById("posts");
      fetch('/bitchan/v1/posts.json')
  .then(response => response.json())
  .then(data => {
    if(data['posts']) 
    {
      for(let post of data['posts'])
      {
        embedPost(post.infohash_hex, root);
      }
    }
  })
  .catch(error => console.error(error))
    </script>
  </body>
</html>
{{ end }}
